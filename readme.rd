# üì¶ Proyecto de Deep Learning - Comparaci√≥n de Modelos con FashionMNIST

## üîÄ Ruta Elegida y Dataset
Este proyecto corresponde a la ruta de **Transfer Learning (Clasificaci√≥n)** usando el dataset [**FashionMNIST**](https://pytorch.org/vision/stable/generated/torchvision.datasets.FashionMNIST.html), que contiene im√°genes en escala de grises (28x28 px) de art√≠culos de moda, distribuidas en 10 clases.  
- üìÇ Fuente: `torchvision.datasets.FashionMNIST`
- üîñ Licencia: MIT (derivado del MNIST original)

---

## ‚öôÔ∏è C√≥mo ejecutar

1. Abre el notebook en **Google Colab** (recomendado) o Jupyter.
2. Activa el entorno de ejecuci√≥n con GPU:  
   - En Colab: `Entorno de ejecuci√≥n > Cambiar tipo de entorno > Acelerador por hardware > GPU`

---

## C√≥mo entrenar y evaluar

1. Ejecuta cada celda del notebook en orden.
2. El pipeline completo incluye:
   - Carga y partici√≥n de datos: `train`, `val`, `test`
   - Preprocesamiento (normalizaci√≥n)
   - Entrenamiento con 3 modelos: `ResNet18`, `MobileNetV2`, `EfficientNetB0`
   - Evaluaci√≥n en test: `Accuracy`, `F1 Macro`, `Matriz de confusi√≥n`
   - Inference con ejemplos reales
3. El mejor modelo se guarda autom√°ticamente por validaci√≥n (`model_best.pth`).

---

## C√≥mo generar la tabla y gr√°ficos de m√©tricas

Al finalizar el entrenamiento, se generan autom√°ticamente los siguientes archivos en la carpeta `/fashion_results/`:

- `fashion_model_results.csv`: tabla comparativa con `val_acc`, `test_acc` y `f1_macro`
- `accuracy_comparison.png`: gr√°fico de barras por modelo (accuracy)
- `f1_comparison.png`: gr√°fico de barras por modelo (F1 Macro)
- `*_cm.png`: matrices de confusi√≥n por modelo
- `ejemplos_inferencia.png`: predicciones sobre im√°genes reales de test

Puedes visualizar y copiar los resultados desde Colab o exportarlos a Google Drive.

---

‚úÖ Proyecto desarrollado para la asignatura *Deep Learning 2025 - Proyecto Final*  
